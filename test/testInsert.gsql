USE GRAPH Hnsw

CREATE QUERY test_insert(INT id, INT M, INT efConstruction, FLOAT mL) 
FOR GRAPH Hnsw SYNTAX V2 {

    /*
    Input: Query Vertex q
        Maximum number of connections for each element per layer M
        Size of the dynamic candidate list efConstruction
        Normalization factor for level generation mL
    */

    TYPEDEF TUPLE <INT ep_id, INT top_level> Meta_Data;

    MaxAccum<Meta_Data> @@meta; /*current meta data of HNSW graph*/
    MaxAccum<INT> @@l;
    MaxAccum<INT> @@query_id;
    SetAccum<Vertex<RootNode>> @@entry_point;
    MaxAccum<Vertex<RootNode>> @@q;

    a = SELECT m FROM MetaNode:m
        ACCUM @@meta += Meta_Data(m.ep_id, m.top_level);

    @@l += floor(-log(1-rand()) * mL);

    b = SELECT s FROM RootNode:s 
        WHERE s.id == id
        POST-ACCUM @@q += s,
            s.maxlevel = @@l,
            @@query_id += s.id;

    /* The first inserted vector */
    IF @@meta.ep_id == -1
        THEN UPDATE m FROM MetaNode:m
                SET m.ep_id = @@query_id,
                    m.top_level = @@l;
        RETURN ;
    END;



    b = SELECT s FROM RootNode:s
        WHERE s.id == @@meta.ep_id
        ACCUM @@entry_point += s;

    SetAccum<Vertex<RootNode>> @@W;

    FOREACH cur_level IN RANGE[@@meta.top_level, @@l + 1].step(-1) DO
        @@W.clear();
        @@W = hnsw_search_layer(@@q, @@entry_point, 1, cur_level);
        @@entry_point.clear();
        @@entry_point = @@W;
        PRINT cur_level, @@W;
    END;

    MinAccum<INT> @@min_l;
    @@min_l += @@l;
    @@min_l += @@meta.top_level;

    SetAccum<Vertex<RootNode>> @eConn;
    SetAccum<Vertex<RootNode>> @eNewConn;
    SetAccum<Vertex<RootNode>> @eMinusConn;

    FOREACH cur_level IN RANGE[@@min_l, 0].step(-1) DO
        MaxAccum<INT> @@Mmax;
        IF cur_level == 0 THEN @@Mmax += 2*M; ELSE @@Mmax += M; END;

        @@W.clear();
        @@W = hnsw_search_layer(@@q, @@entry_point, efConstruction, cur_level);
        neighbors = hnsw_select_neighbors_heuristic(@@q, @@W, @@Mmax, cur_level, TRUE, TRUE);

        b = SELECT e FROM neighbors:e
            POST-ACCUM e.@eConn.clear(),
                e.@eNewConn.clear(),
                e.@eMinusConn.clear(),
                INSERT INTO Link VALUES (e RootNode, id RootNode, cur_level);

        b = SELECT s FROM neighbors:e - (Link:u) - RootNode:s
            WHERE u.level == cur_level
            ACCUM e.@eConn += s
            POST-ACCUM
                IF e.@eConn.size() > @@Mmax
                    THEN e.@eNewConn = hnsw_select_neighbors_heuristic(@@q, e.@eConn, @@Mmax, cur_level, FALSE, TRUE),
                        e.@eMinusConn = e.@eConn MINUS e.@eNewConn
                END;

        /* Delete redundent links of neighbors*/
        b = SELECT e FROM neighbors:e - (Link:u) - RootNode:s
            WHERE u.level == cur_level AND e.@eMinusConn.contains(s)
            ACCUM DELETE(u);

        @@entry_point.clear();
        @@entry_point = @@W;
    END;

    IF @@l > @@meta.top_level 
        THEN 
            UPDATE m FROM MetaNode:m
                SET m.ep_id = @@query_id,
                    m.top_level = @@l;
    END;

    PRINT id, @@l, @@meta;
}

INSTALL QUERY test_insert
/*
CREATE QUERY Seq_Build()
FOR GRAPH Hnsw SYNTAX V2 {
    test_insert(0, 16, 200, 0.8);
test_insert(1, 16, 200, 0.8);
test_insert(2, 16, 200, 0.8);
test_insert(3, 16, 200, 0.8);
test_insert(4, 16, 200, 0.8);
test_insert(5, 16, 200, 0.8);
test_insert(6, 16, 200, 0.8);
test_insert(7, 16, 200, 0.8);
test_insert(8, 16, 200, 0.8);
test_insert(9, 16, 200, 0.8);
test_insert(10, 16, 200, 0.8);
test_insert(11, 16, 200, 0.8);
test_insert(12, 16, 200, 0.8);
test_insert(13, 16, 200, 0.8);
test_insert(14, 16, 200, 0.8);
test_insert(15, 16, 200, 0.8);
test_insert(16, 16, 200, 0.8);
test_insert(17, 16, 200, 0.8);
test_insert(18, 16, 200, 0.8);
test_insert(19, 16, 200, 0.8);
test_insert(20, 16, 200, 0.8);

test_insert(21, 16, 200, 0.8);
test_insert(22, 16, 200, 0.8);
test_insert(23, 16, 200, 0.8);
test_insert(24, 16, 200, 0.8);
test_insert(25, 16, 200, 0.8);
test_insert(26, 16, 200, 0.8);
test_insert(27, 16, 200, 0.8);
test_insert(28, 16, 200, 0.8);
test_insert(29, 16, 200, 0.8);
test_insert(30, 16, 200, 0.8);
test_insert(31, 16, 200, 0.8);
test_insert(32, 16, 200, 0.8);
test_insert(33, 16, 200, 0.8);
test_insert(34, 16, 200, 0.8);
test_insert(35, 16, 200, 0.8);
test_insert(36, 16, 200, 0.8);
test_insert(37, 16, 200, 0.8);
test_insert(38, 16, 200, 0.8);
test_insert(39, 16, 200, 0.8);
test_insert(40, 16, 200, 0.8);
test_insert(41, 16, 200, 0.8);
test_insert(42, 16, 200, 0.8);
test_insert(43, 16, 200, 0.8);
test_insert(44, 16, 200, 0.8);
test_insert(45, 16, 200, 0.8);
test_insert(46, 16, 200, 0.8);
test_insert(47, 16, 200, 0.8);
test_insert(48, 16, 200, 0.8);
test_insert(49, 16, 200, 0.8);
test_insert(50, 16, 200, 0.8);
test_insert(51, 16, 200, 0.8);
test_insert(52, 16, 200, 0.8);
test_insert(53, 16, 200, 0.8);
test_insert(54, 16, 200, 0.8);
test_insert(55, 16, 200, 0.8);
test_insert(56, 16, 200, 0.8);
test_insert(57, 16, 200, 0.8);
test_insert(58, 16, 200, 0.8);
test_insert(59, 16, 200, 0.8);
test_insert(60, 16, 200, 0.8);
test_insert(61, 16, 200, 0.8);
test_insert(62, 16, 200, 0.8);
test_insert(63, 16, 200, 0.8);
test_insert(64, 16, 200, 0.8);
test_insert(65, 16, 200, 0.8);
test_insert(66, 16, 200, 0.8);
test_insert(67, 16, 200, 0.8);
test_insert(68, 16, 200, 0.8);
test_insert(69, 16, 200, 0.8);
test_insert(70, 16, 200, 0.8);
test_insert(71, 16, 200, 0.8);
test_insert(72, 16, 200, 0.8);
test_insert(73, 16, 200, 0.8);
test_insert(74, 16, 200, 0.8);
test_insert(75, 16, 200, 0.8);
test_insert(76, 16, 200, 0.8);
test_insert(77, 16, 200, 0.8);
test_insert(78, 16, 200, 0.8);
test_insert(79, 16, 200, 0.8);
test_insert(80, 16, 200, 0.8);
test_insert(81, 16, 200, 0.8);
test_insert(82, 16, 200, 0.8);
test_insert(83, 16, 200, 0.8);
test_insert(84, 16, 200, 0.8);
test_insert(85, 16, 200, 0.8);
test_insert(86, 16, 200, 0.8);
test_insert(87, 16, 200, 0.8);
test_insert(88, 16, 200, 0.8);
test_insert(89, 16, 200, 0.8);
test_insert(90, 16, 200, 0.8);
test_insert(91, 16, 200, 0.8);
test_insert(92, 16, 200, 0.8);
test_insert(93, 16, 200, 0.8);
test_insert(94, 16, 200, 0.8);
test_insert(95, 16, 200, 0.8);
test_insert(96, 16, 200, 0.8);
test_insert(97, 16, 200, 0.8);
test_insert(98, 16, 200, 0.8);
test_insert(99, 16, 200, 0.8);
test_insert(100, 16, 200, 0.8);
test_insert(101, 16, 200, 0.8);
test_insert(102, 16, 200, 0.8);
test_insert(103, 16, 200, 0.8);
test_insert(104, 16, 200, 0.8);
test_insert(105, 16, 200, 0.8);
test_insert(106, 16, 200, 0.8);
test_insert(107, 16, 200, 0.8);
test_insert(108, 16, 200, 0.8);
test_insert(109, 16, 200, 0.8);
test_insert(110, 16, 200, 0.8);
test_insert(111, 16, 200, 0.8);
test_insert(112, 16, 200, 0.8);
test_insert(113, 16, 200, 0.8);
test_insert(114, 16, 200, 0.8);
test_insert(115, 16, 200, 0.8);
test_insert(116, 16, 200, 0.8);
test_insert(117, 16, 200, 0.8);
test_insert(118, 16, 200, 0.8);
test_insert(119, 16, 200, 0.8);
test_insert(120, 16, 200, 0.8);
test_insert(121, 16, 200, 0.8);
test_insert(122, 16, 200, 0.8);
test_insert(123, 16, 200, 0.8);
test_insert(124, 16, 200, 0.8);
test_insert(125, 16, 200, 0.8);
test_insert(126, 16, 200, 0.8);
test_insert(127, 16, 200, 0.8);
test_insert(128, 16, 200, 0.8);
test_insert(129, 16, 200, 0.8);
test_insert(130, 16, 200, 0.8);
test_insert(131, 16, 200, 0.8);
test_insert(132, 16, 200, 0.8);
test_insert(133, 16, 200, 0.8);
test_insert(134, 16, 200, 0.8);
test_insert(135, 16, 200, 0.8);
test_insert(136, 16, 200, 0.8);
test_insert(137, 16, 200, 0.8);
test_insert(138, 16, 200, 0.8);
test_insert(139, 16, 200, 0.8);
test_insert(140, 16, 200, 0.8);
test_insert(141, 16, 200, 0.8);
test_insert(142, 16, 200, 0.8);
test_insert(143, 16, 200, 0.8);
test_insert(144, 16, 200, 0.8);
test_insert(145, 16, 200, 0.8);
test_insert(146, 16, 200, 0.8);
test_insert(147, 16, 200, 0.8);
test_insert(148, 16, 200, 0.8);
test_insert(149, 16, 200, 0.8);
test_insert(150, 16, 200, 0.8);
test_insert(151, 16, 200, 0.8);
test_insert(152, 16, 200, 0.8);
test_insert(153, 16, 200, 0.8);
test_insert(154, 16, 200, 0.8);
test_insert(155, 16, 200, 0.8);
test_insert(156, 16, 200, 0.8);
test_insert(157, 16, 200, 0.8);
test_insert(158, 16, 200, 0.8);
test_insert(159, 16, 200, 0.8);
test_insert(160, 16, 200, 0.8);
test_insert(161, 16, 200, 0.8);
test_insert(162, 16, 200, 0.8);
test_insert(163, 16, 200, 0.8);
test_insert(164, 16, 200, 0.8);
test_insert(165, 16, 200, 0.8);
test_insert(166, 16, 200, 0.8);
test_insert(167, 16, 200, 0.8);
test_insert(168, 16, 200, 0.8);
test_insert(169, 16, 200, 0.8);
test_insert(170, 16, 200, 0.8);
test_insert(171, 16, 200, 0.8);
test_insert(172, 16, 200, 0.8);
test_insert(173, 16, 200, 0.8);
test_insert(174, 16, 200, 0.8);
test_insert(175, 16, 200, 0.8);
test_insert(176, 16, 200, 0.8);
test_insert(177, 16, 200, 0.8);
test_insert(178, 16, 200, 0.8);
test_insert(179, 16, 200, 0.8);
test_insert(180, 16, 200, 0.8);
test_insert(181, 16, 200, 0.8);
test_insert(182, 16, 200, 0.8);
test_insert(183, 16, 200, 0.8);
test_insert(184, 16, 200, 0.8);
test_insert(185, 16, 200, 0.8);
test_insert(186, 16, 200, 0.8);
test_insert(187, 16, 200, 0.8);
test_insert(188, 16, 200, 0.8);
test_insert(189, 16, 200, 0.8);
test_insert(190, 16, 200, 0.8);
test_insert(191, 16, 200, 0.8);
test_insert(192, 16, 200, 0.8);
test_insert(193, 16, 200, 0.8);
test_insert(194, 16, 200, 0.8);
test_insert(195, 16, 200, 0.8);
test_insert(196, 16, 200, 0.8);
test_insert(197, 16, 200, 0.8);
test_insert(198, 16, 200, 0.8);
test_insert(199, 16, 200, 0.8);
test_insert(200, 16, 200, 0.8);
test_insert(201, 16, 200, 0.8);
test_insert(202, 16, 200, 0.8);
test_insert(203, 16, 200, 0.8);
test_insert(204, 16, 200, 0.8);
test_insert(205, 16, 200, 0.8);
test_insert(206, 16, 200, 0.8);
test_insert(207, 16, 200, 0.8);
test_insert(208, 16, 200, 0.8);
test_insert(209, 16, 200, 0.8);
test_insert(210, 16, 200, 0.8);
test_insert(211, 16, 200, 0.8);
test_insert(212, 16, 200, 0.8);
test_insert(213, 16, 200, 0.8);
test_insert(214, 16, 200, 0.8);
test_insert(215, 16, 200, 0.8);
test_insert(216, 16, 200, 0.8);
test_insert(217, 16, 200, 0.8);
test_insert(218, 16, 200, 0.8);
test_insert(219, 16, 200, 0.8);
test_insert(220, 16, 200, 0.8);
test_insert(221, 16, 200, 0.8);
test_insert(222, 16, 200, 0.8);
test_insert(223, 16, 200, 0.8);
test_insert(224, 16, 200, 0.8);
test_insert(225, 16, 200, 0.8);
test_insert(226, 16, 200, 0.8);
test_insert(227, 16, 200, 0.8);
test_insert(228, 16, 200, 0.8);
test_insert(229, 16, 200, 0.8);
test_insert(230, 16, 200, 0.8);
test_insert(231, 16, 200, 0.8);
test_insert(232, 16, 200, 0.8);
test_insert(233, 16, 200, 0.8);
test_insert(234, 16, 200, 0.8);
test_insert(235, 16, 200, 0.8);
test_insert(236, 16, 200, 0.8);
test_insert(237, 16, 200, 0.8);
test_insert(238, 16, 200, 0.8);
test_insert(239, 16, 200, 0.8);
test_insert(240, 16, 200, 0.8);
test_insert(241, 16, 200, 0.8);
test_insert(242, 16, 200, 0.8);
test_insert(243, 16, 200, 0.8);
test_insert(244, 16, 200, 0.8);
test_insert(245, 16, 200, 0.8);
test_insert(246, 16, 200, 0.8);
test_insert(247, 16, 200, 0.8);
test_insert(248, 16, 200, 0.8);
test_insert(249, 16, 200, 0.8);
test_insert(250, 16, 200, 0.8);
test_insert(251, 16, 200, 0.8);
test_insert(252, 16, 200, 0.8);
test_insert(253, 16, 200, 0.8);
test_insert(254, 16, 200, 0.8);
test_insert(255, 16, 200, 0.8);
test_insert(256, 16, 200, 0.8);
test_insert(257, 16, 200, 0.8);
test_insert(258, 16, 200, 0.8);
test_insert(259, 16, 200, 0.8);
test_insert(260, 16, 200, 0.8);
test_insert(261, 16, 200, 0.8);
test_insert(262, 16, 200, 0.8);
test_insert(263, 16, 200, 0.8);
test_insert(264, 16, 200, 0.8);
test_insert(265, 16, 200, 0.8);
test_insert(266, 16, 200, 0.8);
test_insert(267, 16, 200, 0.8);
test_insert(268, 16, 200, 0.8);
test_insert(269, 16, 200, 0.8);
test_insert(270, 16, 200, 0.8);
test_insert(271, 16, 200, 0.8);
test_insert(272, 16, 200, 0.8);
test_insert(273, 16, 200, 0.8);
test_insert(274, 16, 200, 0.8);
test_insert(275, 16, 200, 0.8);
test_insert(276, 16, 200, 0.8);
test_insert(277, 16, 200, 0.8);
test_insert(278, 16, 200, 0.8);
test_insert(279, 16, 200, 0.8);
test_insert(280, 16, 200, 0.8);
test_insert(281, 16, 200, 0.8);
test_insert(282, 16, 200, 0.8);
test_insert(283, 16, 200, 0.8);
test_insert(284, 16, 200, 0.8);
test_insert(285, 16, 200, 0.8);
test_insert(286, 16, 200, 0.8);
test_insert(287, 16, 200, 0.8);
test_insert(288, 16, 200, 0.8);
test_insert(289, 16, 200, 0.8);
test_insert(290, 16, 200, 0.8);
test_insert(291, 16, 200, 0.8);
test_insert(292, 16, 200, 0.8);
test_insert(293, 16, 200, 0.8);
test_insert(294, 16, 200, 0.8);
test_insert(295, 16, 200, 0.8);
test_insert(296, 16, 200, 0.8);
test_insert(297, 16, 200, 0.8);
test_insert(298, 16, 200, 0.8);
test_insert(299, 16, 200, 0.8);
test_insert(300, 16, 200, 0.8);
test_insert(301, 16, 200, 0.8);
test_insert(302, 16, 200, 0.8);
test_insert(303, 16, 200, 0.8);
test_insert(304, 16, 200, 0.8);
test_insert(305, 16, 200, 0.8);
test_insert(306, 16, 200, 0.8);
test_insert(307, 16, 200, 0.8);
test_insert(308, 16, 200, 0.8);
test_insert(309, 16, 200, 0.8);
test_insert(310, 16, 200, 0.8);
test_insert(311, 16, 200, 0.8);
test_insert(312, 16, 200, 0.8);
test_insert(313, 16, 200, 0.8);
test_insert(314, 16, 200, 0.8);
test_insert(315, 16, 200, 0.8);
test_insert(316, 16, 200, 0.8);
test_insert(317, 16, 200, 0.8);
test_insert(318, 16, 200, 0.8);
test_insert(319, 16, 200, 0.8);
test_insert(320, 16, 200, 0.8);
test_insert(321, 16, 200, 0.8);
test_insert(322, 16, 200, 0.8);
test_insert(323, 16, 200, 0.8);
test_insert(324, 16, 200, 0.8);
test_insert(325, 16, 200, 0.8);
test_insert(326, 16, 200, 0.8);
test_insert(327, 16, 200, 0.8);
test_insert(328, 16, 200, 0.8);
test_insert(329, 16, 200, 0.8);
test_insert(330, 16, 200, 0.8);
test_insert(331, 16, 200, 0.8);
test_insert(332, 16, 200, 0.8);
test_insert(333, 16, 200, 0.8);
test_insert(334, 16, 200, 0.8);
test_insert(335, 16, 200, 0.8);
test_insert(336, 16, 200, 0.8);
test_insert(337, 16, 200, 0.8);
test_insert(338, 16, 200, 0.8);
test_insert(339, 16, 200, 0.8);
test_insert(340, 16, 200, 0.8);
test_insert(341, 16, 200, 0.8);
test_insert(342, 16, 200, 0.8);
test_insert(343, 16, 200, 0.8);
test_insert(344, 16, 200, 0.8);
test_insert(345, 16, 200, 0.8);
test_insert(346, 16, 200, 0.8);
test_insert(347, 16, 200, 0.8);
test_insert(348, 16, 200, 0.8);
test_insert(349, 16, 200, 0.8);
test_insert(350, 16, 200, 0.8);
test_insert(351, 16, 200, 0.8);
test_insert(352, 16, 200, 0.8);
test_insert(353, 16, 200, 0.8);
test_insert(354, 16, 200, 0.8);
test_insert(355, 16, 200, 0.8);
test_insert(356, 16, 200, 0.8);
test_insert(357, 16, 200, 0.8);
test_insert(358, 16, 200, 0.8);
test_insert(359, 16, 200, 0.8);
test_insert(360, 16, 200, 0.8);
test_insert(361, 16, 200, 0.8);
test_insert(362, 16, 200, 0.8);
test_insert(363, 16, 200, 0.8);
test_insert(364, 16, 200, 0.8);
test_insert(365, 16, 200, 0.8);
test_insert(366, 16, 200, 0.8);
test_insert(367, 16, 200, 0.8);
test_insert(368, 16, 200, 0.8);
test_insert(369, 16, 200, 0.8);
test_insert(370, 16, 200, 0.8);
test_insert(371, 16, 200, 0.8);
test_insert(372, 16, 200, 0.8);
test_insert(373, 16, 200, 0.8);
test_insert(374, 16, 200, 0.8);
test_insert(375, 16, 200, 0.8);
test_insert(376, 16, 200, 0.8);
test_insert(377, 16, 200, 0.8);
test_insert(378, 16, 200, 0.8);
test_insert(379, 16, 200, 0.8);
test_insert(380, 16, 200, 0.8);
test_insert(381, 16, 200, 0.8);
test_insert(382, 16, 200, 0.8);
test_insert(383, 16, 200, 0.8);
test_insert(384, 16, 200, 0.8);
test_insert(385, 16, 200, 0.8);
test_insert(386, 16, 200, 0.8);
test_insert(387, 16, 200, 0.8);
test_insert(388, 16, 200, 0.8);
test_insert(389, 16, 200, 0.8);
test_insert(390, 16, 200, 0.8);
test_insert(391, 16, 200, 0.8);
test_insert(392, 16, 200, 0.8);
test_insert(393, 16, 200, 0.8);
test_insert(394, 16, 200, 0.8);
test_insert(395, 16, 200, 0.8);
test_insert(396, 16, 200, 0.8);
test_insert(397, 16, 200, 0.8);
test_insert(398, 16, 200, 0.8);
test_insert(399, 16, 200, 0.8);
test_insert(400, 16, 200, 0.8);
test_insert(401, 16, 200, 0.8);
test_insert(402, 16, 200, 0.8);
test_insert(403, 16, 200, 0.8);
test_insert(404, 16, 200, 0.8);
test_insert(405, 16, 200, 0.8);
test_insert(406, 16, 200, 0.8);
test_insert(407, 16, 200, 0.8);
test_insert(408, 16, 200, 0.8);
test_insert(409, 16, 200, 0.8);
test_insert(410, 16, 200, 0.8);
test_insert(411, 16, 200, 0.8);
test_insert(412, 16, 200, 0.8);
test_insert(413, 16, 200, 0.8);
test_insert(414, 16, 200, 0.8);
test_insert(415, 16, 200, 0.8);
test_insert(416, 16, 200, 0.8);
test_insert(417, 16, 200, 0.8);
test_insert(418, 16, 200, 0.8);
test_insert(419, 16, 200, 0.8);
test_insert(420, 16, 200, 0.8);
test_insert(421, 16, 200, 0.8);
test_insert(422, 16, 200, 0.8);
test_insert(423, 16, 200, 0.8);
test_insert(424, 16, 200, 0.8);
test_insert(425, 16, 200, 0.8);
test_insert(426, 16, 200, 0.8);
test_insert(427, 16, 200, 0.8);
test_insert(428, 16, 200, 0.8);
test_insert(429, 16, 200, 0.8);
test_insert(430, 16, 200, 0.8);
test_insert(431, 16, 200, 0.8);
test_insert(432, 16, 200, 0.8);
test_insert(433, 16, 200, 0.8);
test_insert(434, 16, 200, 0.8);
test_insert(435, 16, 200, 0.8);
test_insert(436, 16, 200, 0.8);
test_insert(437, 16, 200, 0.8);
test_insert(438, 16, 200, 0.8);
test_insert(439, 16, 200, 0.8);
test_insert(440, 16, 200, 0.8);
test_insert(441, 16, 200, 0.8);
test_insert(442, 16, 200, 0.8);
test_insert(443, 16, 200, 0.8);
test_insert(444, 16, 200, 0.8);
test_insert(445, 16, 200, 0.8);
test_insert(446, 16, 200, 0.8);
test_insert(447, 16, 200, 0.8);
test_insert(448, 16, 200, 0.8);
test_insert(449, 16, 200, 0.8);
test_insert(450, 16, 200, 0.8);
test_insert(451, 16, 200, 0.8);
test_insert(452, 16, 200, 0.8);
test_insert(453, 16, 200, 0.8);
test_insert(454, 16, 200, 0.8);
test_insert(455, 16, 200, 0.8);
test_insert(456, 16, 200, 0.8);
test_insert(457, 16, 200, 0.8);
test_insert(458, 16, 200, 0.8);
test_insert(459, 16, 200, 0.8);
test_insert(460, 16, 200, 0.8);
test_insert(461, 16, 200, 0.8);
test_insert(462, 16, 200, 0.8);
test_insert(463, 16, 200, 0.8);
test_insert(464, 16, 200, 0.8);
test_insert(465, 16, 200, 0.8);
test_insert(466, 16, 200, 0.8);
test_insert(467, 16, 200, 0.8);
test_insert(468, 16, 200, 0.8);
test_insert(469, 16, 200, 0.8);
test_insert(470, 16, 200, 0.8);
test_insert(471, 16, 200, 0.8);
test_insert(472, 16, 200, 0.8);
test_insert(473, 16, 200, 0.8);
test_insert(474, 16, 200, 0.8);
test_insert(475, 16, 200, 0.8);
test_insert(476, 16, 200, 0.8);
test_insert(477, 16, 200, 0.8);
test_insert(478, 16, 200, 0.8);
test_insert(479, 16, 200, 0.8);
test_insert(480, 16, 200, 0.8);
test_insert(481, 16, 200, 0.8);
test_insert(482, 16, 200, 0.8);
test_insert(483, 16, 200, 0.8);
test_insert(484, 16, 200, 0.8);
test_insert(485, 16, 200, 0.8);
test_insert(486, 16, 200, 0.8);
test_insert(487, 16, 200, 0.8);
test_insert(488, 16, 200, 0.8);
test_insert(489, 16, 200, 0.8);
test_insert(490, 16, 200, 0.8);
test_insert(491, 16, 200, 0.8);
test_insert(492, 16, 200, 0.8);
test_insert(493, 16, 200, 0.8);
test_insert(494, 16, 200, 0.8);
test_insert(495, 16, 200, 0.8);
test_insert(496, 16, 200, 0.8);
test_insert(497, 16, 200, 0.8);
test_insert(498, 16, 200, 0.8);
test_insert(499, 16, 200, 0.8);
test_insert(500, 16, 200, 0.8);
test_insert(501, 16, 200, 0.8);
test_insert(502, 16, 200, 0.8);
test_insert(503, 16, 200, 0.8);
test_insert(504, 16, 200, 0.8);
test_insert(505, 16, 200, 0.8);
test_insert(506, 16, 200, 0.8);
test_insert(507, 16, 200, 0.8);
test_insert(508, 16, 200, 0.8);
test_insert(509, 16, 200, 0.8);
test_insert(510, 16, 200, 0.8);
test_insert(511, 16, 200, 0.8);
test_insert(512, 16, 200, 0.8);
test_insert(513, 16, 200, 0.8);
test_insert(514, 16, 200, 0.8);
test_insert(515, 16, 200, 0.8);
test_insert(516, 16, 200, 0.8);
test_insert(517, 16, 200, 0.8);
test_insert(518, 16, 200, 0.8);
test_insert(519, 16, 200, 0.8);
test_insert(520, 16, 200, 0.8);
test_insert(521, 16, 200, 0.8);
test_insert(522, 16, 200, 0.8);
test_insert(523, 16, 200, 0.8);
test_insert(524, 16, 200, 0.8);
test_insert(525, 16, 200, 0.8);
test_insert(526, 16, 200, 0.8);
test_insert(527, 16, 200, 0.8);
test_insert(528, 16, 200, 0.8);
test_insert(529, 16, 200, 0.8);
test_insert(530, 16, 200, 0.8);
test_insert(531, 16, 200, 0.8);
test_insert(532, 16, 200, 0.8);
test_insert(533, 16, 200, 0.8);
test_insert(534, 16, 200, 0.8);
test_insert(535, 16, 200, 0.8);
test_insert(536, 16, 200, 0.8);
test_insert(537, 16, 200, 0.8);
test_insert(538, 16, 200, 0.8);
test_insert(539, 16, 200, 0.8);
test_insert(540, 16, 200, 0.8);
test_insert(541, 16, 200, 0.8);
test_insert(542, 16, 200, 0.8);
test_insert(543, 16, 200, 0.8);
test_insert(544, 16, 200, 0.8);
test_insert(545, 16, 200, 0.8);
test_insert(546, 16, 200, 0.8);
test_insert(547, 16, 200, 0.8);
test_insert(548, 16, 200, 0.8);
test_insert(549, 16, 200, 0.8);
test_insert(550, 16, 200, 0.8);
test_insert(551, 16, 200, 0.8);
test_insert(552, 16, 200, 0.8);
test_insert(553, 16, 200, 0.8);
test_insert(554, 16, 200, 0.8);
test_insert(555, 16, 200, 0.8);
test_insert(556, 16, 200, 0.8);
test_insert(557, 16, 200, 0.8);
test_insert(558, 16, 200, 0.8);
test_insert(559, 16, 200, 0.8);
test_insert(560, 16, 200, 0.8);
test_insert(561, 16, 200, 0.8);
test_insert(562, 16, 200, 0.8);
test_insert(563, 16, 200, 0.8);
test_insert(564, 16, 200, 0.8);
test_insert(565, 16, 200, 0.8);
test_insert(566, 16, 200, 0.8);
test_insert(567, 16, 200, 0.8);
test_insert(568, 16, 200, 0.8);
test_insert(569, 16, 200, 0.8);
test_insert(570, 16, 200, 0.8);
test_insert(571, 16, 200, 0.8);
test_insert(572, 16, 200, 0.8);
test_insert(573, 16, 200, 0.8);
test_insert(574, 16, 200, 0.8);
test_insert(575, 16, 200, 0.8);
test_insert(576, 16, 200, 0.8);
test_insert(577, 16, 200, 0.8);
test_insert(578, 16, 200, 0.8);
test_insert(579, 16, 200, 0.8);
test_insert(580, 16, 200, 0.8);
test_insert(581, 16, 200, 0.8);
test_insert(582, 16, 200, 0.8);
test_insert(583, 16, 200, 0.8);
test_insert(584, 16, 200, 0.8);
test_insert(585, 16, 200, 0.8);
test_insert(586, 16, 200, 0.8);
test_insert(587, 16, 200, 0.8);
test_insert(588, 16, 200, 0.8);
test_insert(589, 16, 200, 0.8);
test_insert(590, 16, 200, 0.8);
test_insert(591, 16, 200, 0.8);
test_insert(592, 16, 200, 0.8);
test_insert(593, 16, 200, 0.8);
test_insert(594, 16, 200, 0.8);
test_insert(595, 16, 200, 0.8);
test_insert(596, 16, 200, 0.8);
test_insert(597, 16, 200, 0.8);
test_insert(598, 16, 200, 0.8);
test_insert(599, 16, 200, 0.8);
test_insert(600, 16, 200, 0.8);
test_insert(601, 16, 200, 0.8);
test_insert(602, 16, 200, 0.8);
test_insert(603, 16, 200, 0.8);
test_insert(604, 16, 200, 0.8);
test_insert(605, 16, 200, 0.8);
test_insert(606, 16, 200, 0.8);
test_insert(607, 16, 200, 0.8);
test_insert(608, 16, 200, 0.8);
test_insert(609, 16, 200, 0.8);
test_insert(610, 16, 200, 0.8);
test_insert(611, 16, 200, 0.8);
test_insert(612, 16, 200, 0.8);
test_insert(613, 16, 200, 0.8);
test_insert(614, 16, 200, 0.8);
test_insert(615, 16, 200, 0.8);
test_insert(616, 16, 200, 0.8);
test_insert(617, 16, 200, 0.8);
test_insert(618, 16, 200, 0.8);
test_insert(619, 16, 200, 0.8);
test_insert(620, 16, 200, 0.8);
test_insert(621, 16, 200, 0.8);
test_insert(622, 16, 200, 0.8);
test_insert(623, 16, 200, 0.8);
test_insert(624, 16, 200, 0.8);
test_insert(625, 16, 200, 0.8);
test_insert(626, 16, 200, 0.8);
test_insert(627, 16, 200, 0.8);
test_insert(628, 16, 200, 0.8);
test_insert(629, 16, 200, 0.8);
test_insert(630, 16, 200, 0.8);
test_insert(631, 16, 200, 0.8);
test_insert(632, 16, 200, 0.8);
test_insert(633, 16, 200, 0.8);
test_insert(634, 16, 200, 0.8);
test_insert(635, 16, 200, 0.8);
test_insert(636, 16, 200, 0.8);
test_insert(637, 16, 200, 0.8);
test_insert(638, 16, 200, 0.8);
test_insert(639, 16, 200, 0.8);
test_insert(640, 16, 200, 0.8);
test_insert(641, 16, 200, 0.8);
test_insert(642, 16, 200, 0.8);
test_insert(643, 16, 200, 0.8);
test_insert(644, 16, 200, 0.8);
test_insert(645, 16, 200, 0.8);
test_insert(646, 16, 200, 0.8);
test_insert(647, 16, 200, 0.8);
test_insert(648, 16, 200, 0.8);
test_insert(649, 16, 200, 0.8);
test_insert(650, 16, 200, 0.8);
test_insert(651, 16, 200, 0.8);
test_insert(652, 16, 200, 0.8);
test_insert(653, 16, 200, 0.8);
test_insert(654, 16, 200, 0.8);
test_insert(655, 16, 200, 0.8);
test_insert(656, 16, 200, 0.8);
test_insert(657, 16, 200, 0.8);
test_insert(658, 16, 200, 0.8);
test_insert(659, 16, 200, 0.8);
test_insert(660, 16, 200, 0.8);
test_insert(661, 16, 200, 0.8);
test_insert(662, 16, 200, 0.8);
test_insert(663, 16, 200, 0.8);
test_insert(664, 16, 200, 0.8);
test_insert(665, 16, 200, 0.8);
test_insert(666, 16, 200, 0.8);
test_insert(667, 16, 200, 0.8);
test_insert(668, 16, 200, 0.8);
test_insert(669, 16, 200, 0.8);
test_insert(670, 16, 200, 0.8);
test_insert(671, 16, 200, 0.8);
test_insert(672, 16, 200, 0.8);
test_insert(673, 16, 200, 0.8);
test_insert(674, 16, 200, 0.8);
test_insert(675, 16, 200, 0.8);
test_insert(676, 16, 200, 0.8);
test_insert(677, 16, 200, 0.8);
test_insert(678, 16, 200, 0.8);
test_insert(679, 16, 200, 0.8);
test_insert(680, 16, 200, 0.8);
test_insert(681, 16, 200, 0.8);
test_insert(682, 16, 200, 0.8);
test_insert(683, 16, 200, 0.8);
test_insert(684, 16, 200, 0.8);
test_insert(685, 16, 200, 0.8);
test_insert(686, 16, 200, 0.8);
test_insert(687, 16, 200, 0.8);
test_insert(688, 16, 200, 0.8);
test_insert(689, 16, 200, 0.8);
test_insert(690, 16, 200, 0.8);
test_insert(691, 16, 200, 0.8);
test_insert(692, 16, 200, 0.8);
test_insert(693, 16, 200, 0.8);
test_insert(694, 16, 200, 0.8);
test_insert(695, 16, 200, 0.8);
test_insert(696, 16, 200, 0.8);
test_insert(697, 16, 200, 0.8);
test_insert(698, 16, 200, 0.8);
test_insert(699, 16, 200, 0.8);
test_insert(700, 16, 200, 0.8);
test_insert(701, 16, 200, 0.8);
test_insert(702, 16, 200, 0.8);
test_insert(703, 16, 200, 0.8);
test_insert(704, 16, 200, 0.8);
test_insert(705, 16, 200, 0.8);
test_insert(706, 16, 200, 0.8);
test_insert(707, 16, 200, 0.8);
test_insert(708, 16, 200, 0.8);
test_insert(709, 16, 200, 0.8);
test_insert(710, 16, 200, 0.8);
test_insert(711, 16, 200, 0.8);
test_insert(712, 16, 200, 0.8);
test_insert(713, 16, 200, 0.8);
test_insert(714, 16, 200, 0.8);
test_insert(715, 16, 200, 0.8);
test_insert(716, 16, 200, 0.8);
test_insert(717, 16, 200, 0.8);
test_insert(718, 16, 200, 0.8);
test_insert(719, 16, 200, 0.8);
test_insert(720, 16, 200, 0.8);
test_insert(721, 16, 200, 0.8);
test_insert(722, 16, 200, 0.8);
test_insert(723, 16, 200, 0.8);
test_insert(724, 16, 200, 0.8);
test_insert(725, 16, 200, 0.8);
test_insert(726, 16, 200, 0.8);
test_insert(727, 16, 200, 0.8);
test_insert(728, 16, 200, 0.8);
test_insert(729, 16, 200, 0.8);
test_insert(730, 16, 200, 0.8);
test_insert(731, 16, 200, 0.8);
test_insert(732, 16, 200, 0.8);
test_insert(733, 16, 200, 0.8);
test_insert(734, 16, 200, 0.8);
test_insert(735, 16, 200, 0.8);
test_insert(736, 16, 200, 0.8);
test_insert(737, 16, 200, 0.8);
test_insert(738, 16, 200, 0.8);
test_insert(739, 16, 200, 0.8);
test_insert(740, 16, 200, 0.8);
test_insert(741, 16, 200, 0.8);
test_insert(742, 16, 200, 0.8);
test_insert(743, 16, 200, 0.8);
test_insert(744, 16, 200, 0.8);
test_insert(745, 16, 200, 0.8);
test_insert(746, 16, 200, 0.8);
test_insert(747, 16, 200, 0.8);
test_insert(748, 16, 200, 0.8);
test_insert(749, 16, 200, 0.8);
test_insert(750, 16, 200, 0.8);
test_insert(751, 16, 200, 0.8);
test_insert(752, 16, 200, 0.8);
test_insert(753, 16, 200, 0.8);
test_insert(754, 16, 200, 0.8);
test_insert(755, 16, 200, 0.8);
test_insert(756, 16, 200, 0.8);
test_insert(757, 16, 200, 0.8);
test_insert(758, 16, 200, 0.8);
test_insert(759, 16, 200, 0.8);
test_insert(760, 16, 200, 0.8);
test_insert(761, 16, 200, 0.8);
test_insert(762, 16, 200, 0.8);
test_insert(763, 16, 200, 0.8);
test_insert(764, 16, 200, 0.8);
test_insert(765, 16, 200, 0.8);
test_insert(766, 16, 200, 0.8);
test_insert(767, 16, 200, 0.8);
test_insert(768, 16, 200, 0.8);
test_insert(769, 16, 200, 0.8);
test_insert(770, 16, 200, 0.8);
test_insert(771, 16, 200, 0.8);
test_insert(772, 16, 200, 0.8);
test_insert(773, 16, 200, 0.8);
test_insert(774, 16, 200, 0.8);
test_insert(775, 16, 200, 0.8);
test_insert(776, 16, 200, 0.8);
test_insert(777, 16, 200, 0.8);
test_insert(778, 16, 200, 0.8);
test_insert(779, 16, 200, 0.8);
test_insert(780, 16, 200, 0.8);
test_insert(781, 16, 200, 0.8);
test_insert(782, 16, 200, 0.8);
test_insert(783, 16, 200, 0.8);
test_insert(784, 16, 200, 0.8);
test_insert(785, 16, 200, 0.8);
test_insert(786, 16, 200, 0.8);
test_insert(787, 16, 200, 0.8);
test_insert(788, 16, 200, 0.8);
test_insert(789, 16, 200, 0.8);
test_insert(790, 16, 200, 0.8);
test_insert(791, 16, 200, 0.8);
test_insert(792, 16, 200, 0.8);
test_insert(793, 16, 200, 0.8);
test_insert(794, 16, 200, 0.8);
test_insert(795, 16, 200, 0.8);
test_insert(796, 16, 200, 0.8);
test_insert(797, 16, 200, 0.8);
test_insert(798, 16, 200, 0.8);
test_insert(799, 16, 200, 0.8);
test_insert(800, 16, 200, 0.8);
test_insert(801, 16, 200, 0.8);
test_insert(802, 16, 200, 0.8);
test_insert(803, 16, 200, 0.8);
test_insert(804, 16, 200, 0.8);
test_insert(805, 16, 200, 0.8);
test_insert(806, 16, 200, 0.8);
test_insert(807, 16, 200, 0.8);
test_insert(808, 16, 200, 0.8);
test_insert(809, 16, 200, 0.8);
test_insert(810, 16, 200, 0.8);
test_insert(811, 16, 200, 0.8);
test_insert(812, 16, 200, 0.8);
test_insert(813, 16, 200, 0.8);
test_insert(814, 16, 200, 0.8);
test_insert(815, 16, 200, 0.8);
test_insert(816, 16, 200, 0.8);
test_insert(817, 16, 200, 0.8);
test_insert(818, 16, 200, 0.8);
test_insert(819, 16, 200, 0.8);
test_insert(820, 16, 200, 0.8);
test_insert(821, 16, 200, 0.8);
test_insert(822, 16, 200, 0.8);
test_insert(823, 16, 200, 0.8);
test_insert(824, 16, 200, 0.8);
test_insert(825, 16, 200, 0.8);
test_insert(826, 16, 200, 0.8);
test_insert(827, 16, 200, 0.8);
test_insert(828, 16, 200, 0.8);
test_insert(829, 16, 200, 0.8);
test_insert(830, 16, 200, 0.8);
test_insert(831, 16, 200, 0.8);
test_insert(832, 16, 200, 0.8);
test_insert(833, 16, 200, 0.8);
test_insert(834, 16, 200, 0.8);
test_insert(835, 16, 200, 0.8);
test_insert(836, 16, 200, 0.8);
test_insert(837, 16, 200, 0.8);
test_insert(838, 16, 200, 0.8);
test_insert(839, 16, 200, 0.8);
test_insert(840, 16, 200, 0.8);
test_insert(841, 16, 200, 0.8);
test_insert(842, 16, 200, 0.8);
test_insert(843, 16, 200, 0.8);
test_insert(844, 16, 200, 0.8);
test_insert(845, 16, 200, 0.8);
test_insert(846, 16, 200, 0.8);
test_insert(847, 16, 200, 0.8);
test_insert(848, 16, 200, 0.8);
test_insert(849, 16, 200, 0.8);
test_insert(850, 16, 200, 0.8);
test_insert(851, 16, 200, 0.8);
test_insert(852, 16, 200, 0.8);
test_insert(853, 16, 200, 0.8);
test_insert(854, 16, 200, 0.8);
test_insert(855, 16, 200, 0.8);
test_insert(856, 16, 200, 0.8);
test_insert(857, 16, 200, 0.8);
test_insert(858, 16, 200, 0.8);
test_insert(859, 16, 200, 0.8);
test_insert(860, 16, 200, 0.8);
test_insert(861, 16, 200, 0.8);
test_insert(862, 16, 200, 0.8);
test_insert(863, 16, 200, 0.8);
test_insert(864, 16, 200, 0.8);
test_insert(865, 16, 200, 0.8);
test_insert(866, 16, 200, 0.8);
test_insert(867, 16, 200, 0.8);
test_insert(868, 16, 200, 0.8);
test_insert(869, 16, 200, 0.8);
test_insert(870, 16, 200, 0.8);
test_insert(871, 16, 200, 0.8);
test_insert(872, 16, 200, 0.8);
test_insert(873, 16, 200, 0.8);
test_insert(874, 16, 200, 0.8);
test_insert(875, 16, 200, 0.8);
test_insert(876, 16, 200, 0.8);
test_insert(877, 16, 200, 0.8);
test_insert(878, 16, 200, 0.8);
test_insert(879, 16, 200, 0.8);
test_insert(880, 16, 200, 0.8);
test_insert(881, 16, 200, 0.8);
test_insert(882, 16, 200, 0.8);
test_insert(883, 16, 200, 0.8);
test_insert(884, 16, 200, 0.8);
test_insert(885, 16, 200, 0.8);
test_insert(886, 16, 200, 0.8);
test_insert(887, 16, 200, 0.8);
test_insert(888, 16, 200, 0.8);
test_insert(889, 16, 200, 0.8);
test_insert(890, 16, 200, 0.8);
test_insert(891, 16, 200, 0.8);
test_insert(892, 16, 200, 0.8);
test_insert(893, 16, 200, 0.8);
test_insert(894, 16, 200, 0.8);
test_insert(895, 16, 200, 0.8);
test_insert(896, 16, 200, 0.8);
test_insert(897, 16, 200, 0.8);
test_insert(898, 16, 200, 0.8);
test_insert(899, 16, 200, 0.8);
test_insert(900, 16, 200, 0.8);
test_insert(901, 16, 200, 0.8);
test_insert(902, 16, 200, 0.8);
test_insert(903, 16, 200, 0.8);
test_insert(904, 16, 200, 0.8);
test_insert(905, 16, 200, 0.8);
test_insert(906, 16, 200, 0.8);
test_insert(907, 16, 200, 0.8);
test_insert(908, 16, 200, 0.8);
test_insert(909, 16, 200, 0.8);
test_insert(910, 16, 200, 0.8);
test_insert(911, 16, 200, 0.8);
test_insert(912, 16, 200, 0.8);
test_insert(913, 16, 200, 0.8);
test_insert(914, 16, 200, 0.8);
test_insert(915, 16, 200, 0.8);
test_insert(916, 16, 200, 0.8);
test_insert(917, 16, 200, 0.8);
test_insert(918, 16, 200, 0.8);
test_insert(919, 16, 200, 0.8);
test_insert(920, 16, 200, 0.8);
test_insert(921, 16, 200, 0.8);
test_insert(922, 16, 200, 0.8);
test_insert(923, 16, 200, 0.8);
test_insert(924, 16, 200, 0.8);
test_insert(925, 16, 200, 0.8);
test_insert(926, 16, 200, 0.8);
test_insert(927, 16, 200, 0.8);
test_insert(928, 16, 200, 0.8);
test_insert(929, 16, 200, 0.8);
test_insert(930, 16, 200, 0.8);
test_insert(931, 16, 200, 0.8);
test_insert(932, 16, 200, 0.8);
test_insert(933, 16, 200, 0.8);
test_insert(934, 16, 200, 0.8);
test_insert(935, 16, 200, 0.8);
test_insert(936, 16, 200, 0.8);
test_insert(937, 16, 200, 0.8);
test_insert(938, 16, 200, 0.8);
test_insert(939, 16, 200, 0.8);
test_insert(940, 16, 200, 0.8);
test_insert(941, 16, 200, 0.8);
test_insert(942, 16, 200, 0.8);
test_insert(943, 16, 200, 0.8);
test_insert(944, 16, 200, 0.8);
test_insert(945, 16, 200, 0.8);
test_insert(946, 16, 200, 0.8);
test_insert(947, 16, 200, 0.8);
test_insert(948, 16, 200, 0.8);
test_insert(949, 16, 200, 0.8);
test_insert(950, 16, 200, 0.8);
test_insert(951, 16, 200, 0.8);
test_insert(952, 16, 200, 0.8);
test_insert(953, 16, 200, 0.8);
test_insert(954, 16, 200, 0.8);
test_insert(955, 16, 200, 0.8);
test_insert(956, 16, 200, 0.8);
test_insert(957, 16, 200, 0.8);
test_insert(958, 16, 200, 0.8);
test_insert(959, 16, 200, 0.8);
test_insert(960, 16, 200, 0.8);
test_insert(961, 16, 200, 0.8);
test_insert(962, 16, 200, 0.8);
test_insert(963, 16, 200, 0.8);
test_insert(964, 16, 200, 0.8);
test_insert(965, 16, 200, 0.8);
test_insert(966, 16, 200, 0.8);
test_insert(967, 16, 200, 0.8);
test_insert(968, 16, 200, 0.8);
test_insert(969, 16, 200, 0.8);
test_insert(970, 16, 200, 0.8);
test_insert(971, 16, 200, 0.8);
test_insert(972, 16, 200, 0.8);
test_insert(973, 16, 200, 0.8);
test_insert(974, 16, 200, 0.8);
test_insert(975, 16, 200, 0.8);
test_insert(976, 16, 200, 0.8);
test_insert(977, 16, 200, 0.8);
test_insert(978, 16, 200, 0.8);
test_insert(979, 16, 200, 0.8);
test_insert(980, 16, 200, 0.8);
test_insert(981, 16, 200, 0.8);
test_insert(982, 16, 200, 0.8);
test_insert(983, 16, 200, 0.8);
test_insert(984, 16, 200, 0.8);
test_insert(985, 16, 200, 0.8);
test_insert(986, 16, 200, 0.8);
test_insert(987, 16, 200, 0.8);
test_insert(988, 16, 200, 0.8);
test_insert(989, 16, 200, 0.8);
test_insert(990, 16, 200, 0.8);
test_insert(991, 16, 200, 0.8);
test_insert(992, 16, 200, 0.8);
test_insert(993, 16, 200, 0.8);
test_insert(994, 16, 200, 0.8);
test_insert(995, 16, 200, 0.8);
test_insert(996, 16, 200, 0.8);
test_insert(997, 16, 200, 0.8);
test_insert(998, 16, 200, 0.8);
test_insert(999, 16, 200, 0.8);

}

INSTALL QUERY Seq_Build
*/
